package net.csibio.tse.constants;

import java.util.HashMap;

public class SmoothConst {

    //用于多点S-G平滑
    //k:平滑点数, v:与中心点距离相关的权重, 已经归一化
    public static final HashMap<Integer,double[]> SAVITZKY_GOLAY = new HashMap<Integer, double[]>() {
        {
            put(5, new double[]{0.485714286, 0.342857143, -0.085714286});
            put(7, new double[]{0.333333333, 0.285714286, 0.142857143, -0.095238095});
            put(9, new double[]{0.255411255, 0.233766234, 0.168831169, 0.060606061, -0.090909091});
            put(11,new double[]{0.207459207, 0.195804196, 0.160839161, 0.102564103, 0.020979021, -0.083916084});
            put(13,new double[]{0.174825175, 0.167832168, 0.146853147, 0.111888112, 0.062937063, 0          , -0.076923077});
            put(15,new double[]{0.151131222, 0.146606335, 0.133031674, 0.11040724 , 0.078733032, 0.03800905 , -0.011764706, -0.070588235});
            put(17,new double[]{0.133126935, 0.13003096 , 0.120743034, 0.105263158, 0.083591331, 0.055727554, 0.021671827, -0.018575851, -0.06501548});
            put(19,new double[]{0.118973905, 0.116762494, 0.110128262, 0.099071207, 0.083591331, 0.063688633, 0.039363114, 0.010614772, -0.022556391, -0.060150376});
            put(21,new double[]{0.107551487, 0.105916966, 0.101013403, 0.092840798, 0.08139915 , 0.06668846 , 0.048708728, 0.027459954, 0.002942138, -0.02484472 , -0.055900621});
            put(23,new double[]{0.098136646, 0.09689441 , 0.093167702, 0.086956522, 0.07826087 , 0.067080745, 0.053416149, 0.037267081, 0.01863354 , -0.002484472, -0.026086957, -0.052173913});
            put(25,new double[]{0.090206683, 0.089240873, 0.086343442, 0.081514391, 0.074753718, 0.066254588, 0.055437512, 0.042881978, 0.028394823, 0.011976048 , -0.006374348, -0.026656365, -0.048870002});
        }
    };

    //用于多点Gauss平滑
    //k:平滑点数, v:与中心点距离相关的权重, 已经归一化
    public static final HashMap<Integer,double[]> GAUSS = new HashMap<Integer, double[]>() {
        {
            put(3, new double[]{0.786986042, 0.106506979});
            put(5, new double[]{0.402619947, 0.244201342, 0.054488685});
            put(7, new double[]{0.270682149, 0.216745321, 0.111280758, 0.036632845});
            put(9, new double[]{0.204163689, 0.180173823, 0.123831537, 0.066282245, 0.027630551});
            put(11,new double[]{0.163967208, 0.15136081 , 0.11906463 , 0.079811408, 0.045589   , 0.022190548});
            put(13,new double[]{0.137022816, 0.129618031, 0.109719294, 0.083108539, 0.056331764, 0.034166942, 0.018544022});
            put(15,new double[]{0.117695797, 0.112988605, 0.099966786, 0.081512498, 0.061254792, 0.04242319 , 0.027077836, 0.015928394});
            put(17,new double[]{0.103152619, 0.099978946, 0.091031867, 0.077863682, 0.062565226, 0.04722671 , 0.033488752, 0.022308318, 0.013960189});
            put(19,new double[]{0.091811254, 0.089572068, 0.083176882, 0.073516705, 0.061847591, 0.04952368 , 0.037744735, 0.027381246, 0.018906163, 0.012425302});
            put(21,new double[]{0.082718465, 0.08108053 , 0.076358768, 0.06909227 , 0.060065934, 0.050171285, 0.0402634  , 0.031045158, 0.022998819, 0.016369877, 0.011194727});
            put(23,new double[]{0.075265466, 0.074031634, 0.070450174, 0.064861944, 0.057775141, 0.049789209, 0.041511898, 0.033485217, 0.02613225 , 0.019730752, 0.014412975, 0.010186073});
            put(25,new double[]{0.069045151, 0.068092819, 0.065313914, 0.060932132, 0.055287035, 0.048790637, 0.041878001, 0.034960019, 0.02838531 , 0.022415679, 0.017216561, 0.012861072, 0.009344245});
        }
    };

    public static final HashMap<Integer,double[]> LINEAR = new HashMap<Integer, double[]>() {
        {
            put(3,  new double[]{0.5, 0.25});
            put(5,  new double[]{0.333333333, 0.222222222, 0.111111111});
            put(7,  new double[]{0.25, 0.1875, 0.125, 0.0625});
            put(9,  new double[]{0.2, 0.16, 0.12, 0.08, 0.04});
            put(11, new double[]{0.166666667, 0.138888889, 0.111111111, 0.083333333, 0.055555556, 0.027777778});
            put(13, new double[]{0.142857143, 0.12244898, 0.102040816, 0.081632653, 0.06122449, 0.040816327, 0.020408163});
            put(15, new double[]{0.125, 0.109375, 0.09375, 0.078125, 0.0625, 0.046875, 0.03125, 0.015625});
            put(17, new double[]{0.111111111, 0.098765432, 0.086419753, 0.074074074, 0.061728395, 0.049382716, 0.037037037, 0.024691358, 0.012345679});
            put(19, new double[]{0.1, 0.09, 0.08, 0.07, 0.06, 0.05, 0.04, 0.03, 0.02, 0.01});
            put(21, new double[]{0.090909091, 0.082644628, 0.074380165, 0.066115702, 0.05785124, 0.049586777, 0.041322314, 0.033057851, 0.024793388, 0.016528926, 0.008264463});
            put(23, new double[]{0.083333333, 0.076388889, 0.069444444, 0.0625, 0.055555556, 0.048611111, 0.041666667, 0.034722222, 0.027777778, 0.020833333, 0.013888889, 0.006944444});
            put(25, new double[]{0.076923077, 0.071005917, 0.065088757, 0.059171598, 0.053254438, 0.047337278, 0.041420118, 0.035502959, 0.029585799, 0.023668639, 0.017751479, 0.01183432, 0.00591716});
        }
    };
}






















